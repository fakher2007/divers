import os
import subprocess
import argparse

def clone_repo(repo):
    repo_url, branch_name = repo
    subprocess.run(['git', 'clone', '-b', branch_name, repo_url])

def build_jar(repo_name):
    os.chdir(repo_name)
    subprocess.run(['./mvnw', 'clean', 'package'])
    os.chdir('..')

def bootstrap_jar(repo, env_variables):
    repo_name, branch_name = repo
    os.chdir(repo_name)
    subprocess.run(['./mvnw', 'clean', 'package'])

    cmd = ['java', '-jar', 'target/myapp.jar']
    for env_var, value in env_variables.items():
        cmd.append('-D{}={}'.format(env_var, value))

    subprocess.Popen(['cmder', '/START', 'cmd', '/K'] + cmd)

    os.chdir('..')

def main():
    parser = argparse.ArgumentParser(description='Spring Boot JAR CLI')

    parser.add_argument('command', nargs='?', choices=['clone', 'build-jars', 'run-jars'], default='all', help='Command to execute: clone, build-jars, run-jars')
    args = parser.parse_args()

    repos = [
        ('https://github.com/username/repo1.git', 'main'),
        ('https://github.com/username/repo2.git', 'development'),
        ('https://github.com/username/repo3.git', 'master'),
        ('https://github.com/username/repo4.git', 'feature/branch')
    ]

    env_variables_list = [
        {
            'ENV_VAR1': 'value1',
            'ENV_VAR2': 'value2'
        },
        {
            'ENV_VAR3': 'value3',
            'ENV_VAR4': 'value4'
        },
        {
            'ENV_VAR5': 'value5',
            'ENV_VAR6': 'value6'
        },
        {
            'ENV_VAR7': 'value7',
            'ENV_VAR8': 'value8'
        }
    ]

    if args.command in ['clone', 'all']:
        for repo in repos:
            clone_repo(repo)

    if args.command in ['build-jars', 'all']:
        for repo in repos:
            build_jar(repo[0].split('/')[-1].split('.')[0])

    if args.command in ['run-jars', 'all']:
        for repo, env_variables in zip(repos, env_variables_list):
            bootstrap_jar(repo, env_variables)

if __name__ == '__main__':
    main()
