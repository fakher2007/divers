import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class DuplicatedValues {
    public static List<String> findDuplicatedValues(List<String> stringList) {
        return stringList.stream()
                .collect(Collectors.groupingBy(s -> s, Collectors.counting()))
                .entrySet()
                .stream()
                .filter(entry -> entry.getValue() > 1)
                .map(Map.Entry::getKey)
                .collect(Collectors.toList());
    }
}


----- test -----
import org.junit.jupiter.api.Test;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class DuplicatedValuesTest {

    @Test
    public void testFindDuplicatedValues() {
        List<String> stringList = List.of("apple", "banana", "apple", "cherry", "banana");

        List<String> duplicatedValues = DuplicatedValues.findDuplicatedValues(stringList);

        assertEquals(2, duplicatedValues.size());
        assertEquals("apple", duplicatedValues.get(0));
        assertEquals("banana", duplicatedValues.get(1));
    }
}
